# try different images to photometry in I band
import os
import math
import scipy
import datetime
import numpy as np
from glob import glob
from pyraf import iraf
from astropy.io import fits
from decimal import Decimal
import astropy.wcs as wcs
import matplotlib.pyplot as plt


##############################
M31_field =  ['001','009','010','016','017','018','024','032','033','034','040','041','042','047','048','049']
M31_field =  ['001','009','010']
band = ['I']

time1 = datetime.datetime.now()
def trim_stdstar(f,b):

	os.system("mkdir /home/901405125/6andy_try/{}/".format(f))
	os.system("mkdir /home/901405125/6andy_try/{}/{}/".format(f,b))
	os.system("mkdir /home/901405125/6andy_try/{}/{}/stdstar".format(f,b))
	os.system("mkdir /home/901405125/6andy_try/{}/{}/std_data".format(f,b))
	os.system("cp /home/901405125/21andy_M31/{}/{}/CCN_M31* /home/901405125/6andy_try/{}/{}/".format(f,b,f,b))
	os.system("cp -r /home/901405125/5andy_M31_stdstar/{}/{}/* /home/901405125/6andy_try/{}/{}/".format(f,b,f,b))

	os.chdir('/home/901405125/6andy_try/{}/{}/'.format(f,b))
	print('/home/901405125/6andy_try/{}/{}/'.format(f,b))

	with open("stdV21.dat","r") as std:
	   	std = std.readlines()

	with open("/home/901405125/1main/allstarlist_2.tsv",'r') as allstar:
		allstar = allstar.readlines()

	imgs = glob('CCN*')

	for ref in imgs:

		os.system('rm /home/901405125/6andy_try/048/I/stdstar/*') 
# find all star in here		
		hdulist = fits.open('/home/901405125/6andy_try/{}/{}/{}'.format(f,b,ref))
		w = wcs.WCS(hdulist[0].header, hdulist)	
		# save 
		#os.system('rm allstatinhere*')
		with open("/home/901405125/6andy_try/{}/{}/allstarinhere.tsv".format(f,b,f,b),"w") as allstarinhere:
			allstarlist = []
			for sss in allstar:
				alsss = sss # original data
				sss = sss.replace("+"," ").replace("  "," ").split()
				ra = float(sss[0])
				dec = float(sss[1])

				x,y = w.all_world2pix(ra, dec, 1)

				x = int(x) # x,y in iraf processing must be int type
				y = int(y)

				ab = 0

				if ab<x<(2048-ab) and ab<y<(2048-ab): # don't want outer region of stars
					allstarinhere.write("{}".format(alsss)) # save allstar data in this field for standard star process
# standard stars in this img
		for s,ss in enumerate(std):
			os.system('cp /home/901405125/6andy_try/{}/{}/{} /home/901405125/1main'.format(f,b,ref))
			os.chdir('/home/901405125/1main')
			x = int(ss.split( )[0])
			y = int(ss.split( )[1])

			V = float(ss.split( )[4])
			V_err = float(ss.split( )[5])

			B = float(ss.split( )[6]) + V
			B_err = np.sqrt(float(ss.split( )[7])**2 + V_err**2 )
			R = V - float(ss.split( )[8])
			R_err = np.sqrt(float(ss.split( )[9])**2 + V_err**2 )
			I = R - float(ss.split( )[10])
			I_err = np.sqrt(float(ss.split( )[11])**2 + R_err**2 )
	
			if b == 'B':
				mag, mag_err, = B, B_err
			elif b == 'V':
				mag, mag_err, = V, V_err
			elif b == 'R':
				mag, mag_err, = R, R_err
			elif b == 'I':
				mag, mag_err, = I, I_err
			ab = 50
			if ab<x<(2048-ab) and ab<y<(2048-ab): # don't trimming outer region of images
				iraf.images.imutil.imcopy(input= '{}[{}:{},{}:{}]'.format(ref,x-ab,x+ab,y-ab,y+ab),\
				output= 'M31_std_{}_{}_{}.fit'.format(b, mag, mag_err))
						
				os.chdir('/home/901405125/6andy_try/')
		os.system('mv /home/901405125/1main/M31_std_{}*.fit /home/901405125/6andy_try/{}/{}/stdstar'.format(b,f,b))
		os.system('rm /home/901405125/1main/{}'.format(ref))

# do allstar

		with open("/home/901405125/6andy_try/{}/{}/allstarinhere.tsv".format(f,b,f,b),"r") as allstarinhere:
			allstarinhere = allstarinhere.readlines()
		os.chdir("/home/901405125/6andy_try/{}/{}/stdstar/".format(f,b))
		os.system("rm M31_std_*_19*_*.fit M31_std_*_20*_*.fit M31_std_*_21*_*.fit M31_std_*_22*_*.fit") # remove faint standard stars

		stdstars = glob("M31_std*")
		dif_mag = [] # dif_mag = abs_mag - int_mag
		abs_mag = []
		for s in stdstars:
			try:
				print('allstar start {}'.format(ref))
				abs_m = float(s.split('_')[3])
				hdulist = fits.open('/home/901405125/6andy_try/{}/{}/stdstar/{}'.format(f,b,s))
				w = wcs.WCS(hdulist[0].header, hdulist) # ValueError: Header has SIP keywords without CRPIX keywords

				x_list,y_list = [],[]

				for alsih in allstarinhere:
					alsih = alsih.replace("+"," ").replace("  "," ").split()
					ra = float(alsih[0])
					dec = float(alsih[1])

					x,y = w.all_world2pix(ra, dec, 1)

					x = int(x) # x,y in iraf processing must be int type
					y = int(y)

					ab = 0 # 40 means 40 < x,y < 60 pixels
					if ab<x<(100-ab) and ab<y<(100-ab):				
						x_list.append(x)
						y_list.append(y)
			
				# save x,y list

				with open("/home/901405125/6andy_try/{}/{}/std_data/{}.coo.dat".format(f,b,s),"w") as coo:
					for xyn in range(0,len(x_list)):
						coo.write("{} {}\n".format(x_list[xyn],y_list[xyn]))

				# copy to /1main and process
				os.system("rm /home/901405125/1main/M31*fit*")
				os.system("cp /home/901405125/6andy_try/{}/{}/std_data/{}.coo.dat /home/901405125/6andy_try/{}/{}/stdstar/{}\
				 /home/901405125/1main/".format(f,b,s,f,b,s))
		
				os.chdir('/home/901405125/1main')

				# all star photometry
				iraf.noao(_doprint=0)
				iraf.digiphot(_doprint=0)
				iraf.daophot(_doprint=0)

				img = s
			except:
				x_list = []

			# phot
			try:
				if len(x_list) > 1:
					iraf.noao.digiphot.daophot.phot(image ='{}'.format(img),\
					coords ='{}.coo.dat'.format(img),\
					output = '{}.mag.1'.format(img)) #(default: image.mag.?)

					# pstselect
					iraf.noao.digiphot.daophot.pstselect(image ='{}'.format(img),\
					photfile= '{}.mag.1'.format(img),\
					pstfile = '{}.pst.1'.format(img),\
					maxnpsf = '10')

					# psf
					iraf.noao.digiphot.daophot.psf(image ='{}'.format(img),\
					photfile= '{}.mag.1'.format(img),\
					pstfile = '{}.pst.1'.format(img),\
					psfimage= '{}.psf.1'.format(img) ,opstfile= '{}.pst.2'.format(img) ,groupfil= '{}.psg.1'.format(img))

					# allstar
					iraf.noao.digiphot.daophot.allstar(image ='{}'.format(img),\
					photfile= '{}.mag.1'.format(img),\
					psfimage= '{}.psf.1'.format(img),\
					allstarf= '{}.als.1'.format(img) ,rejfile = '{}.arj.1'.format(img) ,subimage= '{}.sub.1'.format(img) )

					os.system("cp {}*.1 /home/901405125/6andy_try/{}/{}/std_data/".format(s,f,b))
					os.system("rm /home/901405125/1main/{}*".format(img))
					os.system("rm /home/901405125/1main/tmp*fits")


					# we have allstar output file, then we can calculate diff_mag = 
				
					with open("/home/901405125/6andy_try/{}/{}/std_data/{}.als.1".format(f,b,s),'r') as als:
						als = als.readlines()
			
					als2 = []
					for n,l in enumerate(als):
						l = l.split()
						if n > 43:
							als2.append(l)
					for n,l in enumerate(als2):
						print(float(l[1]),float(l[2]))			
						if 47 < float(l[1]) < 53 and 47 < float(l[2]) < 53: #start at line 45
							print('ok: ',l[1],l[2])
							x_pos= float(l[1])
							y_pos= float(l[2])
							mag = float(l[3])
					
							print(x_pos,y_pos,mag)

					# convert by *.mag.1 files 
							with open("/home/901405125/6andy_try/{}/{}/std_data/{}.mag.1".format(f,b,s),'r') as mag1:
								mag1 = mag1.readlines()
							mag2 = [l for n,l in enumerate(mag1) if n > 74]
							for n,l in enumerate(mag2):
								if n%5 ==1:
									if int(x_pos-1)<float(l.split()[0])<int(x_pos+1) and int(y_pos-1)<float(l.split()[1])<int(y_pos+1):
										flux_1 = float(mag2[n+3].split()[3])
										fluxmag_1 = float(mag2[n+3].split()[4])
										d_m = fluxmag_1 + 2.5*np.log10(flux_1)

										mag2 = mag - d_m
										flux = 10**(-mag2/2.5)						
										dif_m = abs_m - mag2

										abs_mag.append(abs_m)
										dif_mag.append(dif_m)
										print(x_pos, y_pos, abs_m, dif_m)
				# if no star around center star, just do phot
				elif len(x_list) == 1:
					iraf.noao.digiphot.daophot.phot(image ='{}'.format(img),\
					coords ='{}.coo.dat'.format(img),\
					output = '{}.mag.1'.format(img)) #(default: image.mag.?)

					with open("/home/901405125/6andy_try/{}/{}/std_data/{}.mag.1".format(f,b,s),'r') as mag1:
						mag1 = mag1.readlines()
					mag2 = [l for n,l in enumerate(mag1) if n > 74]
					for n,l in enumerate(mag2):
						if n%5 ==1:
							if int(x_pos-1)<float(l.split()[0])<int(x_pos+1) and int(y_pos-1)<float(l.split()[1])<int(y_pos+1):
								mag = float(mag2[n+3].split()[4])
														
								dif_m = abs_m - mag

								abs_mag.append(abs_m)
								dif_mag.append(dif_m)
								print(x_pos, y_pos, abs_m, dif_m)
						
						
			except:
				print("problem", s)
		
		# save files
		with open("/home/901405125/6andy_try/{}/{}/std_photdata.dat".format(f,b),'w') as std_phot:
			for n,abs_m in enumerate(abs_mag):			
				std_phot.write("{} {}\n".format(abs_m,dif_mag[n]))

		stdd = np.std(dif_mag)
		mean_dif = np.mean(dif_mag)
		# plot
		plt.figure()
		plot = plt.plot(abs_mag,dif_mag, 'b.')

		plt.xlabel('abs_Mag')
		plt.ylabel('dif_Mag')
		plt.xlim(16,19)
		plt.ylim(28 -2,28 +2) 
		plt.title('{},std = {}'.format(ref,stdd))
		plt.savefig('/home/901405125/6andy_try/{}/{}/std_{}_{}_{}_{}.png'.format(f,b,f,b,ref,stdd))
            
		os.system("rm /home/901405125/6andy_try/{}/{}/std_data/*".format(f,b))

		# outlier rejection
		abs_mag2, dif_mag2 = [],[]	

		for n,d_m in enumerate(dif_mag):
			if (mean_dif-2*stdd)< d_m <(mean_dif+2*stdd):
				abs_mag2.append(abs_mag[n])
				dif_mag2.append(d_m)
		stdd2 = np.std(dif_mag2)
		# plot
		plt.figure()
		plot = plt.plot(abs_mag2,dif_mag2, 'b.')

		plt.xlabel('abs_Mag')
		plt.ylabel('dif_Mag')
		plt.xlim(16,19)
		plt.ylim(28 -2,28 +2) 
		plt.title('{},std(no outlier) = {}'.format(ref,stdd2))
		plt.savefig('/home/901405125/6andy_try/{}/{}/std_{}_{}_{}_{}_noutlier.png'.format(f,b,f,b,ref,stdd2))
            
		os.system("rm /home/901405125/6andy_try/{}/{}/std_data/*".format(f,b))
				

		print("finish {} {} stdstar allstar phot".format(f,b))
	

for f in M31_field:
	for b in band:
		trim_stdstar(f,b)
time2 = datetime.datetime.now()
print(time2 -time1)
